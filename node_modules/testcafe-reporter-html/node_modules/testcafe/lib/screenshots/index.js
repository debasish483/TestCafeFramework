'use strict';

exports.__esModule = true;

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _lodash = require('lodash');

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

var _capturer = require('./capturer');

var _capturer2 = _interopRequireDefault(_capturer);

var _pathPattern = require('./path-pattern');

var _pathPattern2 = _interopRequireDefault(_pathPattern);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Screenshots = function () {
    function Screenshots(path, pattern) {
        (0, _classCallCheck3.default)(this, Screenshots);

        this.enabled = !!path;
        this.screenshotsPath = path;
        this.screenshotsPattern = pattern;
        this.testEntries = [];
        this.now = (0, _moment2.default)();
    }

    Screenshots.prototype._addTestEntry = function _addTestEntry(test) {
        var testEntry = {
            test: test,
            path: this.screenshotsPath || '',
            screenshots: []
        };

        this.testEntries.push(testEntry);

        return testEntry;
    };

    Screenshots.prototype._getTestEntry = function _getTestEntry(test) {
        return (0, _lodash.find)(this.testEntries, function (entry) {
            return entry.test === test;
        });
    };

    Screenshots.prototype._ensureTestEntry = function _ensureTestEntry(test) {
        var testEntry = this._getTestEntry(test);

        if (!testEntry) testEntry = this._addTestEntry(test);

        return testEntry;
    };

    Screenshots.prototype.getScreenshotsInfo = function getScreenshotsInfo(test) {
        return this._getTestEntry(test).screenshots;
    };

    Screenshots.prototype.hasCapturedFor = function hasCapturedFor(test) {
        return this.getScreenshotsInfo(test).length > 0;
    };

    Screenshots.prototype.getPathFor = function getPathFor(test) {
        return this._getTestEntry(test).path;
    };

    Screenshots.prototype.createCapturerFor = function createCapturerFor(test, testIndex, quarantine, connection, warningLog) {
        var testEntry = this._ensureTestEntry(test);
        var pathPattern = new _pathPattern2.default(this.screenshotsPattern, {
            testIndex: testIndex,
            quarantineAttempt: quarantine ? quarantine.getNextAttemptNumber() : null,
            now: this.now,
            fixture: test.fixture.name,
            test: test.name,
            parsedUserAgent: connection.browserInfo.parsedUserAgent
        });

        return new _capturer2.default(this.screenshotsPath, testEntry, connection, pathPattern, warningLog);
    };

    return Screenshots;
}();

exports.default = Screenshots;
module.exports = exports['default'];