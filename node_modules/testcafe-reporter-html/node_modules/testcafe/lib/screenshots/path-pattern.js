'use strict';

exports.__esModule = true;

var _assign = require('babel-runtime/core-js/object/assign');

var _assign2 = _interopRequireDefault(_assign);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _lodash = require('lodash');

var _correctFilePath = require('../utils/correct-file-path');

var _correctFilePath2 = _interopRequireDefault(_correctFilePath);

var _escapeUserAgent = require('../utils/escape-user-agent');

var _escapeUserAgent2 = _interopRequireDefault(_escapeUserAgent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DATE_FORMAT = 'YYYY-MM-DD';
var TIME_FORMAT = 'HH-mm-ss';

var SCRENSHOT_EXTENTION = 'png';

var ERRORS_FOLDER = 'errors';

var PLACEHOLDERS = {
    DATE: '${DATE}',
    TIME: '${TIME}',
    TEST_INDEX: '${TEST_INDEX}',
    FILE_INDEX: '${FILE_INDEX}',
    QUARANTINE_ATTEMPT: '${QUARANTINE_ATTEMPT}',
    FIXTURE: '${FIXTURE}',
    TEST: '${TEST}',
    USERAGENT: '${USERAGENT}',
    BROWSER: '${BROWSER}',
    BROWSER_VERSION: '${BROWSER_VERSION}',
    OS: '${OS}',
    OS_VERSION: '${OS_VERSION}'
};

var DEFAULT_PATH_PATTERN_FOR_REPORT = PLACEHOLDERS.DATE + '_' + PLACEHOLDERS.TIME + '\\test-' + PLACEHOLDERS.TEST_INDEX;
var DEFAULT_PATH_PATTERN = DEFAULT_PATH_PATTERN_FOR_REPORT + '\\' + PLACEHOLDERS.USERAGENT + '\\' + PLACEHOLDERS.FILE_INDEX + '.' + SCRENSHOT_EXTENTION;
var QUARANTINE_MODE_DEFAULT_PATH_PATTERN = DEFAULT_PATH_PATTERN_FOR_REPORT + '\\run-' + PLACEHOLDERS.QUARANTINE_ATTEMPT + '\\' + PLACEHOLDERS.USERAGENT + '\\' + PLACEHOLDERS.FILE_INDEX + '.' + SCRENSHOT_EXTENTION;

var PathPattern = function () {
    function PathPattern(pattern, data) {
        (0, _classCallCheck3.default)(this, PathPattern);

        this.pattern = this._ensurePattern(pattern, data.quarantineAttempt);
        this.data = this._addDefaultFields(data);
        this.placeholderToDataMap = this._createPlaceholderToDataMap();
    }

    PathPattern.prototype._ensurePattern = function _ensurePattern(pattern, quarantineAttempt) {
        if (pattern) return pattern;

        return quarantineAttempt ? QUARANTINE_MODE_DEFAULT_PATH_PATTERN : DEFAULT_PATH_PATTERN;
    };

    PathPattern.prototype._addDefaultFields = function _addDefaultFields(data) {
        var defaultFields = {
            formattedDate: data.now.format(DATE_FORMAT),
            formattedTime: data.now.format(TIME_FORMAT),
            fileIndex: 1,
            errorFileIndex: 1
        };

        return (0, _assign2.default)({}, defaultFields, data);
    };

    PathPattern.prototype._createPlaceholderToDataMap = function _createPlaceholderToDataMap() {
        var _this = this,
            _ref;

        return _ref = {}, _ref[PLACEHOLDERS.DATE] = this.data.formattedDate, _ref[PLACEHOLDERS.TIME] = this.data.formattedTime, _ref[PLACEHOLDERS.TEST_INDEX] = this.data.testIndex, _ref[PLACEHOLDERS.QUARANTINE_ATTEMPT] = this.data.quarantineAttempt || 1, _ref[PLACEHOLDERS.FIXTURE] = this.data.fixture, _ref[PLACEHOLDERS.TEST] = this.data.test, _ref[PLACEHOLDERS.FILE_INDEX] = function (forError) {
            return forError ? _this.data.errorFileIndex : _this.data.fileIndex;
        }, _ref[PLACEHOLDERS.USERAGENT] = this.data.parsedUserAgent.toString(), _ref[PLACEHOLDERS.BROWSER] = this.data.parsedUserAgent.browser, _ref[PLACEHOLDERS.BROWSER_VERSION] = this.data.parsedUserAgent.browserVersion, _ref[PLACEHOLDERS.OS] = this.data.parsedUserAgent.os, _ref[PLACEHOLDERS.OS_VERSION] = this.data.parsedUserAgent.osVersion, _ref;
    };

    PathPattern._buildPath = function _buildPath(pattern, placeholderToDataMap, forError) {
        var resultFilePath = pattern;

        var _loop = function _loop(placeholder) {
            var findPlaceholderRegExp = new RegExp((0, _lodash.escapeRegExp)(placeholder), 'g');

            resultFilePath = resultFilePath.replace(findPlaceholderRegExp, function () {
                if (placeholder === PLACEHOLDERS.FILE_INDEX) {
                    var getFileIndexFn = placeholderToDataMap[placeholder];
                    var result = getFileIndexFn(forError);

                    if (forError) result = ERRORS_FOLDER + '\\' + result;

                    return result;
                } else if (placeholder === PLACEHOLDERS.USERAGENT) {
                    var userAgent = placeholderToDataMap[placeholder];

                    return (0, _escapeUserAgent2.default)(userAgent);
                }

                return placeholderToDataMap[placeholder];
            });
        };

        for (var placeholder in placeholderToDataMap) {
            _loop(placeholder);
        }

        return resultFilePath;
    };

    PathPattern.prototype.getPath = function getPath(forError) {
        var path = PathPattern._buildPath(this.pattern, this.placeholderToDataMap, forError);

        return (0, _correctFilePath2.default)(path, SCRENSHOT_EXTENTION);
    };

    PathPattern.prototype.getPathForReport = function getPathForReport() {
        var path = PathPattern._buildPath(DEFAULT_PATH_PATTERN_FOR_REPORT, this.placeholderToDataMap);

        return (0, _correctFilePath2.default)(path);
    };

    // For testing purposes


    (0, _createClass3.default)(PathPattern, null, [{
        key: 'PLACEHOLDERS',
        get: function get() {
            return PLACEHOLDERS;
        }
    }]);
    return PathPattern;
}();

exports.default = PathPattern;
module.exports = exports['default'];