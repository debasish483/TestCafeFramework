'use strict';

exports.__esModule = true;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var getTempProfile = function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(proxyHostName, config) {
        var tempProfile, shouldUseCommonProfile;
        return _regenerator2.default.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        tempProfile = commonTempProfile;
                        shouldUseCommonProfile = !config.headless && !config.emulation;

                        if (!(!shouldUseCommonProfile || !commonTempProfile)) {
                            _context.next = 6;
                            break;
                        }

                        _context.next = 5;
                        return (0, _createTempProfile2.default)(proxyHostName);

                    case 5:
                        tempProfile = _context.sent;

                    case 6:

                        if (shouldUseCommonProfile && !commonTempProfile) commonTempProfile = tempProfile;

                        return _context.abrupt('return', tempProfile);

                    case 8:
                    case 'end':
                        return _context.stop();
                }
            }
        }, _callee, this);
    }));

    return function getTempProfile(_x, _x2) {
        return _ref.apply(this, arguments);
    };
}();

var _endpointUtils = require('endpoint-utils');

var _config = require('./config');

var _config2 = _interopRequireDefault(_config);

var _createTempProfile = require('./create-temp-profile');

var _createTempProfile2 = _interopRequireDefault(_createTempProfile);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var commonTempProfile = null;

exports.default = function () {
    var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee2(proxyHostName, configString) {
        var config, tempProfileDir, cdpPort;
        return _regenerator2.default.wrap(function _callee2$(_context2) {
            while (1) {
                switch (_context2.prev = _context2.next) {
                    case 0:
                        config = (0, _config2.default)(configString);

                        if (config.userProfile) {
                            _context2.next = 7;
                            break;
                        }

                        _context2.next = 4;
                        return getTempProfile(proxyHostName, config);

                    case 4:
                        _context2.t0 = _context2.sent;
                        _context2.next = 8;
                        break;

                    case 7:
                        _context2.t0 = null;

                    case 8:
                        tempProfileDir = _context2.t0;
                        _context2.t1 = config.cdpPort;

                        if (_context2.t1) {
                            _context2.next = 19;
                            break;
                        }

                        if (config.userProfile) {
                            _context2.next = 17;
                            break;
                        }

                        _context2.next = 14;
                        return (0, _endpointUtils.getFreePort)();

                    case 14:
                        _context2.t2 = _context2.sent;
                        _context2.next = 18;
                        break;

                    case 17:
                        _context2.t2 = null;

                    case 18:
                        _context2.t1 = _context2.t2;

                    case 19:
                        cdpPort = _context2.t1;
                        return _context2.abrupt('return', { config: config, cdpPort: cdpPort, tempProfileDir: tempProfileDir });

                    case 21:
                    case 'end':
                        return _context2.stop();
                }
            }
        }, _callee2, this);
    }));

    return function (_x3, _x4) {
        return _ref2.apply(this, arguments);
    };
}();

module.exports = exports['default'];