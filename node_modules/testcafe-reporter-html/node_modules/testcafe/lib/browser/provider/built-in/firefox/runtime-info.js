'use strict';

exports.__esModule = true;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _endpointUtils = require('endpoint-utils');

var _config = require('./config');

var _config2 = _interopRequireDefault(_config);

var _createTempProfile = require('./create-temp-profile');

var _createTempProfile2 = _interopRequireDefault(_createTempProfile);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
    var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(configString) {
        var config, marionettePort, runtimeInfo;
        return _regenerator2.default.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        config = (0, _config2.default)(configString);
                        _context.t0 = config.marionettePort;

                        if (_context.t0) {
                            _context.next = 11;
                            break;
                        }

                        if (config.userProfile) {
                            _context.next = 9;
                            break;
                        }

                        _context.next = 6;
                        return (0, _endpointUtils.getFreePort)();

                    case 6:
                        _context.t1 = _context.sent;
                        _context.next = 10;
                        break;

                    case 9:
                        _context.t1 = null;

                    case 10:
                        _context.t0 = _context.t1;

                    case 11:
                        marionettePort = _context.t0;
                        runtimeInfo = { config: config, marionettePort: marionettePort };

                        if (config.userProfile) {
                            _context.next = 19;
                            break;
                        }

                        _context.next = 16;
                        return (0, _createTempProfile2.default)(runtimeInfo);

                    case 16:
                        _context.t2 = _context.sent;
                        _context.next = 20;
                        break;

                    case 19:
                        _context.t2 = null;

                    case 20:
                        runtimeInfo.tempProfileDir = _context.t2;
                        return _context.abrupt('return', runtimeInfo);

                    case 22:
                    case 'end':
                        return _context.stop();
                }
            }
        }, _callee, this);
    }));

    return function (_x) {
        return _ref.apply(this, arguments);
    };
}();

module.exports = exports['default'];